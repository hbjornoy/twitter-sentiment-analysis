Prioritert rekkefølge: 


Supert om dere leser raskt igjennom rapporten + leser dette. Hvis dere ser i rapporten så ser dere struktuen jeg ser for meg og da gir det jeg skriver her mer mening.. 

personen(e) i parentes er bare et forslag, jeg bare vet at jeg ikke klarer å gjøre 1, 3,4... 

1. Etablere et basic neural netowork (bare for sammenligning) og VELGE ET NEURAL NETWORK (HÅVARD Thomas(?)) 
    husk de vil vi skal starte med enkel baseline, så vise at det blir bedre
    base kan godt være det som er utgangspunktet i håvards magiske algoritme... 
2. Med valgt neural network kjøre følgende: (Hvem som helst)
    - CV unprepro med self-trained 50, 100, 200
    - CV unprepro med pre-trained 50,100, 200
        - dette er klart til kjøring (tror jeg) i compare_sef_pre_trained_word_vectors
        - Hvilket neural net? et basic? Jeg stemmer for det- da er dette det basic nettet som vi etterpå gjør bedre!
        (husk de vil vi skal ha baseline som blir bedre og bedre)
    - CV med unrepro pre-trained 200 - variere antall epochs- plotte dette- bestemme antall epochs fra dette
        - Lage egen fil for dette? stemmer litt for det- har lagd skallet til den: "determining epochs"
    - CV med alle steg prepro- med riktig antall epochs (følg notebook determining)
        - relativt klart i determining_preprocessing
    - CV, apply different thresholds in DS- tenkte ut en fin måte å presentere dette på.. 
        - gjøre på slutten i determining_preprocessing?
    - CV + make pred av det vi velger ut, på FULLT SETT
        - gjøre i slutten av determining preprocessing? 
    
3. Skrive om neural networks i rapport (Thomas se på dette? )
4. Skrive om tools i rapport (Thomas se på dette)
5. Sette inn resulater i rapport- diskutere dette (Hedda)
6. Rydde opp i kode (alle) 
    - tokenizing.py (Hedda mener denne ser bra ut, men mulig vi skal gjøre små endinger)
    - sammenslå cleaning og helpers?
    - maketextfile- sjekk for feil i kode, men ellers ok
    - glove_module
    - Comparing_sef_pre_trained_word_vectors
    - train_glove.py (må lages, og inneholder alle steg som må gjøres for å få cooc.pkl)
    - Determining preprocessing (må ryddes i osv)
    - Determining Epochs (har begynt på, må gjøres ferdig.. )
    - neural nets- må ryddes/fikses/ferdigstilles
    - glove_solution, sh-filene, cooc, pickle vocab- fått fra skolen, gjort små endringer.. må kommenteres osv
    - (hva annet skal vi levere, supert om vi blir enige om en liste)
7. Lage RUN.PY
8. VELGE KAGGLE SCORE (THOMAS- han er leder av laget)
9. skrive abstrakt, fiske på intro, lese igjennom, gjøre ferdig rapporten



IDE: lage en funskjon som gitt dimensjon, full/test returnerer corpus (fullt sett eller bare test) og global vectors med riktig dimensjon? Vi kopierer inn den koden i starten av alle filer.. 